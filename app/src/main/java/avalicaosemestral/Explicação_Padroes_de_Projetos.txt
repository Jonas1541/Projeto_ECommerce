Explicação do projeto:

	Na pasta commerce estão as classes referentes a compra e processamento de produtos. Os produtos vão no carrinho que vai dentro da Ecommerce, tudo por composição.
	Na pasta payment_methods vão as classes de pagamento. Temos uma interface pra gerar o desacoplamento da forma de pagamento e as devidas implementações de exemplo do mesmo.
	Na pasta delivery_methods temos tudo relacionado à questão de logística. Também temos uma interface pra gerar o desacomplamento e facilitar a troca de serviço de entrega no sistema, caso necessário.
	Por fim, na pasta factory temos todas as factorys do sistema. As factorys são utilizadas pra aumentar a abstração dos processos e facilitar a instância das classes. Temos uma factory do Item, pra instânciar o produto. Ela já retorna a variável auxiliar ItemQuantity que possui tbm a quantidade do produto, pronto pra ser adicionado na lista da classe Cart. Eu pensei em fazer uma factory que abstraia o processo inteiro e já instanciava uma classe Ecommerce direto, mas lembrando do princípio da responsabilidade única que devemos aplicar também às factories, eu achei melhor não. Também temos a PaymentFactory que retorna o tipo de pagamento e a LogisticFactory que retorna uma instância de serviço de entrega, incluindo já o endereço que o entregador precisa visitar e também a lista de produtos que ele deve ter (o pacote de entrega, ou parcel) que o cliente comprou. 
	Caso o pedido seja cancelado, temos uma função cancelar na classe implementada do entregador que cancela o pedido (faz um sysout,no caso). Além disso, eu também fiz uma classe abstrata Logistic pra criar uma implementação inicial dos métodos pra tentar fazer um decorator com as classes de implementação, mas no final acabei fazendo apenas uma herança comum que economiza um pouco de código. O decorator não foi necessário nesse caso pq todas as classes iam implementar a mesma classe de origem do mesmo jeito, então uma simples herança funcionou melhor.
	Creio que seja isso. No App.java na pasta raiz tem um exemplo de todo o programa sendo utilizado, no que seria um ciclo completo entre as funcionalidades do projeto. Espero que o senhor me dê uma boa nota e eu passe na matéria, teacher. Boas férias pro senhor e espero vê-lo de novo ano que vem! (Em outra disciplina, claro). Sua didática é ótima e seu carisma também, tudo de bom pro senhor!
